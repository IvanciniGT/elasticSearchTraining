input {
    beats {
        port => 5044
    }
}

filter {

    mutate {
        remove_field => [ "agent" , "input" ,"ecs","tags", "log" , "host" ,"@version", "@timestamp" ]
    }
    grok {
        match => {
            #"message" => "(?<client_ip>[0-9.]+) - - \[(?<date>.+)\] \"(?<http_method>[A-Z]+) " #I'm using custom regex
            #"message" => "%{IP:clientip} - - \[(?<date>.+)\]" # I'm using predefined regex
            # https://github.com/hpcugent/logstash-patterns/blob/master/files/grok-patterns
            "message" => "%{COMBINEDAPACHELOG}"
        }
        remove_field => [ "message" ]
    }
    date {
        match => [ "timestamp", "dd/MMM/yyyy:HH:mm:ss Z"]
        remove_field => [ "timestamp" ]
    }
    mutate {
        rename    =>  { "verb" => "http_method" }
        lowercase => ["http_method"]
    }
    geoip {
        source => "clientip"
    }
    
    #agent "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/107.0.0.0 Safari/537.36"
    dissect {
        mapping => {
            "agent" => "\"Mozilla/5.0 (%{os})%{browser}\""
        }
    }
    
    if [http_method] == 'head' {
    # We usually use this kind of plugin inside an IF statement
        drop {} # This plugin drops every message
    }
}


output {
    stdout {} # This is great for debbuging & testing
}