input {
    beats {
        port => 5044
    }
}
filter {
    mutate {
        remove_field => [ "agent" , "input" ,"ecs","tags", "log" , "host" ,"@version", "@timestamp" ]
    }
    csv {
        source => "message"
        separator => "," # Default value
        columns => [
                        "country",
                        "city",
                        "accentcity",
                        "region",
                        "population",
                        "latitude",
                        "longitude"
                   ]
        remove_field => [ "message" ]
    }
    if [population] { # If population has a value
        mutate {
            convert => {
              "population" => "integer"
            }
        }
    } else {
        mutate {
            remove_field => [ "population" ]
        }
    }
    mutate {
        add_field => {
            "coordinates" => [ "%{longitude}", "%{latitude}" ]
        }
        remove_field => [ "longitude", "latitude" ]
    }
    mutate {
        convert => {
          "coordinates" => "float"
        }
    }
}
output {
    #stdout {} # This is great for debbuging & testing
    elasticsearch{
        hosts => [ "172.31.3.117:8080" ] # Never for a production environment. 
        # In a production enviroment at least 2 nodes of the cluster 
        ########################
        index => "world-cities-from-fb-1"

        #########################
        manage_template => true # Please manage a template for the index(containing the mappings)
        template_name => world_cities
        template => "/templates/cities.json"
    }
}